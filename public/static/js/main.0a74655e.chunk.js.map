{"version":3,"sources":["logo.png","components/LaunchItem.js","components/LaunchLegend.js","components/Launches.js","components/RocketItem.js","components/Rocket.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","LaunchItem","_ref","_ref$launch","launch","flight_number","mission_name","launch_date_local","launch_success","details","react_default","a","createElement","className","classNames","text-success","text-danger","dist_default","format","font-weight-bold","font-italic","Link","to","concat","LaunchLegend","style","width","QUERY_LAUNCHES","gql","_templateObject","Launches","react_apollo_esm","query","loading","error","data","console","log","Fragment","launches","map","key","Component","RocketItem","_ref$rocketInfo","rocketInfo","_ref$rocketInfo$rocke","rocket","rocket_name","_ref$rocketInfo$rocke2","second_stage","manufacturer","nationality","ROCKET_QUERY","Rocket_templateObject","Rocket","this","props","match","params","parseInt","variables","client","ApolloClient","uri","App","BrowserRouter","src","logo","alt","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0a74655e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.18adf3db.png\";","import React from 'react';\nimport classNames from 'classnames';\nimport Moment from 'react-moment';\nimport {Link} from 'react-router-dom';\n\nexport default function LaunchItem({launch: {flight_number, mission_name, launch_date_local, \nlaunch_success, details}}){\n  \nreturn (\n    <div className = \"card card-body mb-3\">\n        <div className = \"row\">\n            <div className = \"col-md-9\">\n                <h4>Mission: <span className={classNames({\n                    'text-success': launch_success,\n                    'text-danger': !launch_success\n                })}>{mission_name}</span></h4>\n                <p>Date: <Moment format = \"MM-DD-YYYY hh:mm A\">{launch_date_local}</Moment></p>\n\n                {details && <p>Details: <span className = {classNames({\n                    \"font-weight-bold\": true,\n                    \"font-italic\": true,\n                    \"text-success\": launch_success,\n                    \"text-danger\": !launch_success\n                })}>{details}</span></p>}\n  \n            </div>\n            <div className = \"col-md-3\">\n                <Link to = {`/rocket/${flight_number}`} className = \"btn btn-info\">Rocket Info</Link>\n            </div>\n        </div>\n    </div>\n)\n  \n}\n","import React from 'react';\n\nexport default function LaunchLegend() {\n  return (\n    <div className = \"mb-4 card\" style = {{width: \"18rem\"}}>\n        <h5 className = \"card-header\">Launch Success/Failure</h5>\n        <ul className = \"list-group list-group-flush\">\n            <li className = \"list-group-item\"><span className = \"px-3 mr-2 bg-success\"></span>Launch Succeeded!</li>\n            <li className = \"list-group-item\"><span className = \"px-3 mr-2 bg-danger\"></span>Launch Failed!</li>\n        </ul>\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport LaunchItem from './LaunchItem.js';\nimport LaunchLegend from './LaunchLegend';\n\nconst QUERY_LAUNCHES = gql `\n  query QueryLaunches {\n    launches {\n      flight_number\n      mission_name\n      launch_date_local\n      launch_success\n      details \n    }\n  }\n`\nclass Launches extends Component {\n  render() {\n    return (\n      <div>\n        <LaunchLegend />\n        <h1 className = \"display-4 my-3\">Launches</h1>\n        <Query query = {QUERY_LAUNCHES}>\n          {\n            ({loading, error, data}) => {\n              if(loading) return <h4>Loading. Please wait...</h4>;\n              if (error) console.log(error);\n              console.log(data);\n\n              return <React.Fragment>\n                {\n                  data.launches.map(launch => (\n                    <LaunchItem key = {launch.flight_number} launch = {launch}/>\n                  ))\n                }\n              </React.Fragment>\n\n            }\n          }\n        </Query>\n      </div>\n    )\n  }\n}\n\nexport default Launches\n","import React from 'react';\n\nexport default function RocketItem({rocketInfo: {mission_name, rocket: {rocket_name, \n    second_stage: {manufacturer, nationality}}}}) {\n  return (\n    <div className = \"card mb-3\">\n        <h4 className = \"card-header\"><span className = \"font-italic\">{mission_name}</span> Rocket Info</h4>\n        <div className = \"card-body\">\n            <h4><span className=\"font-italic\">Rocket Name</span>: {rocket_name}</h4> \n            <h4><span className=\"font-italic\">Manufacturer</span>: {manufacturer}</h4>\n            <h4><span className=\"font-italic\">Nationality</span>: {nationality}</h4>\n        </div>\n    </div>\n  )\n}\n\n\n","import React, {Component} from 'react';\nimport gql from 'graphql-tag';\nimport { Query} from 'react-apollo';\nimport {Link} from 'react-router-dom';\nimport RocketItem from './RocketItem';\nconst ROCKET_QUERY = gql`\n  query RocketQuery($flight_number: Int!) {\n    launch(flight_number: $flight_number) {\n      mission_name\n      rocket {\n        rocket_name\n        second_stage {\n          manufacturer\n          nationality\n        }\n      }\n    }\n  }\n`\n\n\nclass Rocket extends Component {\n  render() {\n    let { flight_number } = this.props.match.params;\n    flight_number = parseInt(flight_number);\n    return(\n      <div>\n        <Query query = {ROCKET_QUERY} variables = {{flight_number}}>\n          {\n            ({loading, error, data}) => {\n              if (loading) return <h4>Loading. Please wait...</h4>;\n              if (error) console.log(error);\n\n              \n              console.log(data.launch)\n              return (\n                <React.Fragment>\n                  <RocketItem rocketInfo = {data.launch}/>\n                  <Link className = \"btn btn-warning\" to = '/'>Back</Link>\n                </React.Fragment>\n                \n              )\n            }\n\n          }\n        </Query>\n      </div>\n    )\n  }\n};\n\nexport default Rocket;\n","import React, { Component } from 'react';\nimport ApolloClient from 'apollo-boost';\nimport {ApolloProvider} from 'react-apollo'\nimport './App.css';\nimport logo from './logo.png';\nimport Launches from './components/Launches';\nimport Rocket from './components/Rocket';\nimport {BrowserRouter, Route} from \"react-router-dom\";\n\nconst client = new ApolloClient({\n  uri: '/graphql'\n})\n\nclass App extends Component {\n  render() {\n    return (\n      <ApolloProvider client = {client}>\n      <BrowserRouter>\n        <div className=\"container\">\n          <img className = \"logo\" src={logo} alt = \"Space X\" />\n            <Route exact path = \"/\" component = {Launches} />\n            <Route exact path = \"/rocket/:flight_number\" component = {Rocket}/>\n          \n        </div>\n        </BrowserRouter>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}